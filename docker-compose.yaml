
services:
  university:
    build:
      context: ./university-subgraph
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - graphql-network

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: university_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    networks:
      - graphql-network

  students:
    build:
      context: ./students-subgraph
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - graphql-network

  teachers:
    build:
      context: ./teachers-subgraph
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - graphql-network

  rover:
    image: ubuntu:20.04
    command: >
      bash -c "
        sleep 30 &&
        apt-get update &&
        apt-get install -y curl &&
        curl -sSL https://rover.apollo.dev/nix/latest | sh &&
        /root/.rover/bin/rover supergraph compose --config /rover/supergraph.yaml > /rover/supergraph.graphql &&
        tail -f /dev/null
      "
    environment:
      - APOLLO_ELV2_LICENSE=accept
    volumes:
      - ./rover:/rover
      # Uncomment below if using local schema files
      - ./university-subgraph/university/src/main/resources/graphql:/rover/university
      - ./students-subgraph/students/src/main/resources/graphql:/rover/students
      - ./teachers-subgraph/teachers/src/main/resources/graphql:/rover/teachers
    depends_on:
      - university
      - students
      - teachers
    networks:
      - graphql-network

  router:
    image: ubuntu:20.04
    working_dir: /app
    command: >
      bash -c "
        sleep 90 &&
        apt-get update &&
        apt-get install -y curl &&
        curl -sSL https://router.apollo.dev/download/nix/latest | sh &&
        ./router --supergraph /rover/supergraph.graphql --config /rover/router.yaml 2> /rover/router.log
      "
    environment:
      - APOLLO_ELV2_LICENSE=accept
    ports:
      - "4000:4000"
    volumes:
      - ./rover:/rover
    depends_on:
      - rover
      - university
      - students
      - teachers
    networks:
      - graphql-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/graphql"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  graphql-network:
    driver: bridge
